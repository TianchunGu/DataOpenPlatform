#include <cstring>
#include <iostream>
using namespace std;

void bb(const int bh,const string xm)
{
  char *ptr=nullptr;
  *ptr=3; //会发生内存泄漏
  //strcpy(ptr,xm.c_str());//会发生内存泄漏
}

void aa(const int no,const string name)
{
  bb(3,"冰冰");
}

int main()
{
  aa(8,"西施");

  return 0;
}


/*
程序运行并发生段错误，生成core文件。
➜  2-7 GDB debugging of core file git:(main) ✗ ls
demo.cpp
➜  2-7 GDB debugging of core file git:(main) ✗ g++ -o demo demo.cpp -g           
➜  2-7 GDB debugging of core file git:(main) ✗ ./demo                         
[1]    49010 segmentation fault (core dumped)  ./demo
*/

/*
允许系统生成core文件。
➜  2-7 GDB debugging of core file git:(main) ✗ ulimit -a
-t: cpu time (seconds)              unlimited
-f: file size (blocks)              unlimited
-d: data seg size (kbytes)          unlimited
-s: stack size (kbytes)             8192
-c: core file size (blocks)         0
-m: resident set size (kbytes)      unlimited
-u: processes                       63476
-n: file descriptors                1048576
-l: locked-in-memory size (kbytes)  2041156
-v: address space (kbytes)          unlimited
-x: file locks                      unlimited
-i: pending signals                 63476
-q: bytes in POSIX msg queues       819200
-e: max nice                        0
-r: max rt priority                 0
-N 15:                              unlimited
➜  2-7 GDB debugging of core file git:(main) ✗ ulimit -c unlimited 
➜  2-7 GDB debugging of core file git:(main) ✗ ulimit -a          
-t: cpu time (seconds)              unlimited
-f: file size (blocks)              unlimited
-d: data seg size (kbytes)          unlimited
-s: stack size (kbytes)             8192
-c: core file size (blocks)         unlimited
-m: resident set size (kbytes)      unlimited
-u: processes                       63476
-n: file descriptors                1048576
-l: locked-in-memory size (kbytes)  2041156
-v: address space (kbytes)          unlimited
-x: file locks                      unlimited
-i: pending signals                 63476
-q: bytes in POSIX msg queues       819200
-e: max nice                        0
-r: max rt priority                 0
-N 15:                              unlimited
➜  2-7 GDB debugging of core file git:(main) ✗ ls
demo  demo.cpp
➜  2-7 GDB debugging of core file git:(main) ✗ ./demo                         
[1]    63426 segmentation fault (core dumped)  ./demo
➜  2-7 GDB debugging of core file git:(main) ✗ ls
core.63426  demo  demo.cpp
➜  2-7 GDB debugging of core file git:(main) ✗ 
*/

/*
调试core文件
➜  2-7 GDB debugging of core file git:(main) ✗ gdb demo core.63426 
GNU gdb (Ubuntu 12.1-0ubuntu1~22.04.2) 12.1
Copyright (C) 2022 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
--Type <RET> for more, q to quit, c to continue without paging--
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from demo...
[New LWP 63426]

warning: Section `.reg-xstate/63426' in core file too small.
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `./demo'.
Program terminated with signal SIGSEGV, Segmentation fault.

warning: Section `.reg-xstate/63426' in core file too small.
#0  0x00005c6a8de1d404 in bb (bh=3, xm=...) at demo.cpp:8

warning: Source file is more recent than executable.
8         *ptr=3; //会发生内存泄漏
*/

/*
查看函数调用栈。
函数调用栈（Call Stack）是程序运行时用于管理函数调用和返回的一种内存结构，它是程序执行过程中最核心的数据结构之一。
(gdb) bt
#0  0x00005c6a8de1d404 in bb (bh=3, xm="冰冰") at demo.cpp:8
#1  0x00005c6a8de1d464 in aa (no=8, name="西施") at demo.cpp:14
#2  0x00005c6a8de1d50a in main () at demo.cpp:19
*/